/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grupo24maga.Vistas;

import grupo24maga.AccesoADatos.AlumnoData;
import grupo24maga.AccesoADatos.InscripcionData;
import grupo24maga.Entidades.Alumno;
import grupo24maga.Entidades.Inscripcion;
import grupo24maga.Entidades.Materia;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Anto
 */
public class FormularioInscripcion extends javax.swing.JInternalFrame {
    InscripcionData insc_d = new InscripcionData();
    AlumnoData aD = new AlumnoData();
    private DefaultTableModel modelo = new DefaultTableModel(); 
    private Materia materiaSelec;
    private Alumno alumnoSelec;
    Inscripcion insc = new Inscripcion();
    private int idAlum;
    private List<Materia> matNoCursadas;
    private List<Materia> matCursadas;
    
    public FormularioInscripcion() {
        initComponents();
        botones = new ButtonGroup();
        botones.add(jrbMatNo);
        botones.add(jrbMatIn);
        matNoCursadas = new ArrayList<>();
        matCursadas = new ArrayList<>();
        cargarCombo();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botones = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbAlumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jrbMatIn = new javax.swing.JRadioButton();
        jrbMatNo = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbAnularInsc = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Formulario de Inscripción");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Seleccione un alumno:");

        jcbAlumnos.setBackground(new java.awt.Color(255, 255, 255));
        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Listado de Materias");

        jrbMatIn.setBackground(new java.awt.Color(102, 153, 255));
        jrbMatIn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jrbMatIn.setForeground(new java.awt.Color(0, 0, 0));
        jrbMatIn.setText("Materias Inscriptas");
        jrbMatIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMatInActionPerformed(evt);
            }
        });

        jrbMatNo.setBackground(new java.awt.Color(102, 153, 255));
        jrbMatNo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jrbMatNo.setForeground(new java.awt.Color(0, 0, 0));
        jrbMatNo.setText("Materias no Inscriptas");
        jrbMatNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMatNoActionPerformed(evt);
            }
        });

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabla);

        jbInscribir.setBackground(new java.awt.Color(255, 255, 255));
        jbInscribir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbInscribir.setForeground(new java.awt.Color(0, 0, 0));
        jbInscribir.setText("Inscribir");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnularInsc.setBackground(new java.awt.Color(255, 255, 255));
        jbAnularInsc.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbAnularInsc.setForeground(new java.awt.Color(0, 0, 0));
        jbAnularInsc.setText("Anular Inscripción");
        jbAnularInsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularInscActionPerformed(evt);
            }
        });

        jbSalir.setBackground(new java.awt.Color(255, 255, 255));
        jbSalir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(0, 0, 0));
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(133, 133, 133))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jrbMatIn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jrbMatNo))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(35, 35, 35)
                                .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 29, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbInscribir)
                                .addGap(56, 56, 56)
                                .addComponent(jbAnularInsc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbSalir)))))
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbMatIn)
                    .addComponent(jrbMatNo))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(89, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbAnularInsc)
                            .addComponent(jbInscribir)
                            .addComponent(jbSalir))
                        .addGap(31, 31, 31))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed
        //me equivoque aca no era
    }//GEN-LAST:event_jcbAlumnosActionPerformed

    private void jrbMatNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMatNoActionPerformed
 
        //Acá vamos a recuperar el alumno que está en el combo, el alumno seleccionado 
        alumnoSelec = (Alumno)jcbAlumnos.getSelectedItem();
        //obtengo el id
        idAlum = alumnoSelec.getIdAlumno();
        //Ahora tengo que saber si el usuario presiono el botón
        boolean botonNocursadas = jrbMatNo.isSelected();
        //Ahora si dependiendo de ello puedo obtener las materias por id
        
        if(botonNocursadas){
            matNoCursadas = insc_d.obtenerMateriasNoCursadas(idAlum);
            llenarTabla(matNoCursadas);
        }else if(jrbMatIn.isSelected()){
            matCursadas = insc_d.obtenerMateriasCursadas(idAlum);
            llenarTabla(matCursadas);
        }
    }//GEN-LAST:event_jrbMatNoActionPerformed

    private void jrbMatInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMatInActionPerformed

        alumnoSelec = (Alumno)jcbAlumnos.getSelectedItem();
        
        idAlum = alumnoSelec.getIdAlumno();
        boolean botonCursadas = jrbMatIn.isSelected();
           
        if(botonCursadas){
            matCursadas = insc_d.obtenerMateriasCursadas(idAlum);
            llenarTabla(matCursadas);
        }else if(jrbMatNo.isSelected()){
            matNoCursadas = insc_d.obtenerMateriasNoCursadas(idAlum);
            llenarTabla(matNoCursadas);
        }
    }//GEN-LAST:event_jrbMatInActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
       
        alumnoSelec = (Alumno)jcbAlumnos.getSelectedItem();
       
        if(jrbMatNo.isSelected()){
            if(materiaSelec!=null){
            insc.setAlumno(alumnoSelec);
            insc.setMateria(materiaSelec);
           
            //Aca le paso mi inscripcion al método
            insc_d.guardarInscripcion(insc);

            // Limpiar la selección en la tabla
            jTabla.clearSelection();
            }else{
                JOptionPane.showMessageDialog(null, "Debe seleccionar una materia antes de inscribir");
            }
        }else if(jrbMatIn.isSelected()){
            JOptionPane.showMessageDialog(this,"Ya está inscripto a esa materia");
        }
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaMouseClicked
        // Tengo que ver si hay una fila seleccionada en la tabla
        int filaSelec = jTabla.getSelectedRow();
        
        if(filaSelec!=-1){
            int idM = (Integer) jTabla.getValueAt(filaSelec,0);
            String nombre = (String) jTabla.getValueAt(filaSelec,1);
            int anio = (Integer) jTabla.getValueAt(filaSelec,2); 
        //Ahora puedo crear un objeto del tipo Materia para pasarle los datos
            materiaSelec = new Materia(idM, nombre, anio, isIcon);   
        }else{
            materiaSelec = null;
        }
    }//GEN-LAST:event_jTablaMouseClicked

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbAnularInscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularInscActionPerformed
        alumnoSelec = (Alumno)jcbAlumnos.getSelectedItem();
        int idA = alumnoSelec.getIdAlumno();
        
        if (jrbMatIn.isSelected()) {
            if (materiaSelec != null) {
                int idM = materiaSelec.getIdMateria();
                insc_d.borrarInscripcionMateriaAlumno(idA, idM);
                jTabla.clearSelection();
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una materia de la tabla");
            }
        } else if (jrbMatNo.isSelected()) {
            JOptionPane.showMessageDialog(null, "Usted no está inscripto en ninguna materia de la lista");
        } 
    }//GEN-LAST:event_jbAnularInscActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup botones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabla;
    private javax.swing.JButton jbAnularInsc;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JRadioButton jrbMatIn;
    private javax.swing.JRadioButton jrbMatNo;
    // End of variables declaration//GEN-END:variables
    private void cargarCombo(){
        
        List<Alumno> alumnos = aD.listarAlumnos();
        
        for (Alumno alumno : alumnos) {
        jcbAlumnos.addItem(alumno);
        }
    }
    private void armarCabecera(){
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
        jTabla.setModel(modelo);
    }
    public void llenarTabla(List<Materia>mat){
    //Borrar las filas que ya existen
    modelo = (DefaultTableModel)jTabla.getModel();
    modelo.setRowCount(0);
    // Itera a través de las materias y agrega cada materia como una fila en la tabla
        for (Materia materia : mat) {
            // Asumiendo que la clase Materia tiene métodos para obtener el ID, nombre y año
            int id = materia.getIdMateria();
            String nombre = materia.getNombre();
            int anio = materia.getAnioMateria();
            // Crear un arreglo de objetos con los datos de la materia
            Object[] fila = {id, nombre, anio};
            // Agregar la fila a la tabla
            modelo.addRow(fila);
        }
    }
}
